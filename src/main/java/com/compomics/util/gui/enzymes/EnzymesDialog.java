package com.compomics.util.gui.enzymes;

import com.compomics.util.examples.BareBonesBrowserLaunch;
import com.compomics.util.experiment.biology.enzymes.Enzyme;
import com.compomics.util.experiment.biology.enzymes.EnzymeFactory;
import com.compomics.util.gui.error_handlers.HelpDialog;
import com.compomics.util.gui.file_handling.FileChooserUtil;
import com.compomics.util.pride.CvTerm;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import no.uib.jsparklines.extra.HtmlLinksRenderer;

/**
 * Dialog for the Enzymes.
 *
 * @author Harald Barsnes
 */
public class EnzymesDialog extends javax.swing.JDialog {

    /**
     * The enzymes factory.
     */
    private EnzymeFactory enzymeFactory = EnzymeFactory.getInstance();
    /**
     * The default enzymes table column header tooltips.
     */
    private ArrayList<String> defaultEnzymesTableToolTips;
    /**
     * The user enzymes table column header tooltips.
     */
    private ArrayList<String> userEnzymesTableToolTips;
    /**
     * The color to use for the HTML tags for the selected rows, in HTML color
     * code.
     */
    private final String selectedRowHtmlTagFontColor = "#FFFFFF";
    /**
     * The color to use for the HTML tags for the rows that are not selected, in
     * HTML color code.
     */
    private final String notSelectedRowHtmlTagFontColor = "#0101DF";

    /**
     * Creates a new EnzymesDialog.
     *
     * @param parentFrame the parent frame
     * @param modal true if modal
     */
    public EnzymesDialog(Frame parentFrame, boolean modal) {
        super(parentFrame, modal);
        initComponents();

        // set up tables
        setUpTables();

        setLocationRelativeTo(parentFrame);
        setVisible(true);
    }

    /**
     * Set up the table properties.
     */
    private void setUpTables() {

        enzymesTable.setAutoCreateRowSorter(true);

        // make sure that the scroll pane is see-through
        enzymesScrollPane.getViewport().setOpaque(false);

        enzymesTable.getTableHeader().setReorderingAllowed(false);

        // the index column
        enzymesTable.getColumn(" ").setMaxWidth(40);
        enzymesTable.getColumn(" ").setMinWidth(40);

        enzymesTable.getColumn("PSI-MOD").setCellRenderer(
                new HtmlLinksRenderer(selectedRowHtmlTagFontColor, notSelectedRowHtmlTagFontColor));

        // set up the table header tooltips
        defaultEnzymesTableToolTips = new ArrayList<>();
        defaultEnzymesTableToolTips.add(null);
        defaultEnzymesTableToolTips.add("Name");
        defaultEnzymesTableToolTips.add("Cleaves After");
        defaultEnzymesTableToolTips.add("Does Not Cleave If Follow By");
        defaultEnzymesTableToolTips.add("Cleaves Before");
        defaultEnzymesTableToolTips.add("Does Not Cleave If Preceeded By");
        defaultEnzymesTableToolTips.add("PSI-MOD Mapping");

        userEnzymesTableToolTips = new ArrayList<>();
        userEnzymesTableToolTips.add(null);
        userEnzymesTableToolTips.add("Name");
        userEnzymesTableToolTips.add("Cleaves After");
        userEnzymesTableToolTips.add("Does Not Cleave If Follow By");
        userEnzymesTableToolTips.add("Cleaves Before");
        userEnzymesTableToolTips.add("Does Not Cleave If Preceeded By");
        userEnzymesTableToolTips.add("PSI-MOD Mapping");

        ((TitledBorder) enzymesPanel.getBorder()).setTitle(
                "Enzymes (" + enzymesTable.getRowCount() + ")");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enzymesEditorPanel = new javax.swing.JPanel();
        enzymesPanel = new javax.swing.JPanel();
        enzymesScrollPane = new javax.swing.JScrollPane();
        enzymesTable = new JTable() {
            protected JTableHeader createDefaultTableHeader() {
                return new JTableHeader(columnModel) {
                    public String getToolTipText(MouseEvent e) {
                        java.awt.Point p = e.getPoint();
                        int index = columnModel.getColumnIndexAtX(p.x);
                        int realIndex = columnModel.getColumn(index).getModelIndex();
                        return (String) defaultEnzymesTableToolTips.get(realIndex);
                    }
                };
            }
        };
        exportEnzymesLabel = new javax.swing.JLabel();
        addUserEnzyme = new javax.swing.JButton();
        deleteEnzymeButton = new javax.swing.JButton();
        resetEnzymesLabel = new javax.swing.JLabel();
        importEnzymesLabel = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        enzymesHelpJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Enzyme Details");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        enzymesEditorPanel.setBackground(new java.awt.Color(230, 230, 230));

        enzymesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Enzymes"));
        enzymesPanel.setOpaque(false);

        enzymesTable.setModel(new DefaultEnzymesTable());
        enzymesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        enzymesTable.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                enzymesTableMouseMoved(evt);
            }
        });
        enzymesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enzymesTableMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                enzymesTableMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                enzymesTableMouseReleased(evt);
            }
        });
        enzymesScrollPane.setViewportView(enzymesTable);

        exportEnzymesLabel.setText("<html><a href>Export to file</a></html>");
        exportEnzymesLabel.setToolTipText("Export to enzymes factory file");
        exportEnzymesLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exportEnzymesLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exportEnzymesLabelMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                exportEnzymesLabelMouseReleased(evt);
            }
        });

        addUserEnzyme.setText("Add");
        addUserEnzyme.setToolTipText("Add a new enzyme");
        addUserEnzyme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserEnzymeActionPerformed(evt);
            }
        });

        deleteEnzymeButton.setText("Delete");
        deleteEnzymeButton.setToolTipText("Delete an enzyme");
        deleteEnzymeButton.setEnabled(false);
        deleteEnzymeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEnzymeButtonActionPerformed(evt);
            }
        });

        resetEnzymesLabel.setText("<html><a href>Reset to default</a></html>");
        resetEnzymesLabel.setToolTipText("Reset to the default list of enzymes");
        resetEnzymesLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                resetEnzymesLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                resetEnzymesLabelMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                resetEnzymesLabelMouseReleased(evt);
            }
        });

        importEnzymesLabel.setText("<html><a href>Import from file</a></html>");
        importEnzymesLabel.setToolTipText("Import from enzymes factory file");
        importEnzymesLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                importEnzymesLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                importEnzymesLabelMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                importEnzymesLabelMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout enzymesPanelLayout = new javax.swing.GroupLayout(enzymesPanel);
        enzymesPanel.setLayout(enzymesPanelLayout);
        enzymesPanelLayout.setHorizontalGroup(
            enzymesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enzymesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(enzymesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(enzymesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
                    .addGroup(enzymesPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(exportEnzymesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(importEnzymesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resetEnzymesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 353, Short.MAX_VALUE)
                        .addComponent(addUserEnzyme, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteEnzymeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        enzymesPanelLayout.setVerticalGroup(
            enzymesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enzymesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(enzymesScrollPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(enzymesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(enzymesPanelLayout.createSequentialGroup()
                        .addGroup(enzymesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exportEnzymesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resetEnzymesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(importEnzymesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enzymesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteEnzymeButton)
                        .addComponent(addUserEnzyme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        enzymesHelpJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/help.GIF"))); // NOI18N
        enzymesHelpJButton.setToolTipText("Help");
        enzymesHelpJButton.setBorder(null);
        enzymesHelpJButton.setBorderPainted(false);
        enzymesHelpJButton.setContentAreaFilled(false);
        enzymesHelpJButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                enzymesHelpJButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                enzymesHelpJButtonMouseExited(evt);
            }
        });
        enzymesHelpJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enzymesHelpJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout enzymesEditorPanelLayout = new javax.swing.GroupLayout(enzymesEditorPanel);
        enzymesEditorPanel.setLayout(enzymesEditorPanelLayout);
        enzymesEditorPanelLayout.setHorizontalGroup(
            enzymesEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enzymesEditorPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(enzymesHelpJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 700, Short.MAX_VALUE)
                .addComponent(okButton)
                .addContainerGap())
            .addGroup(enzymesEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(enzymesEditorPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(enzymesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        enzymesEditorPanelLayout.setVerticalGroup(
            enzymesEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enzymesEditorPanelLayout.createSequentialGroup()
                .addContainerGap(503, Short.MAX_VALUE)
                .addGroup(enzymesEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(okButton)
                    .addComponent(enzymesHelpJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(enzymesEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(enzymesEditorPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(enzymesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(43, 43, 43)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 790, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(enzymesEditorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 537, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(enzymesEditorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Changes the cursor to a hand cursor if over a link.
     *
     * @param evt
     */
    private void enzymesTableMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enzymesTableMouseMoved
        int row = enzymesTable.rowAtPoint(evt.getPoint());
        int column = enzymesTable.columnAtPoint(evt.getPoint());

        if (row != -1) {

            if (column == enzymesTable.getColumn("PSI-MOD").getModelIndex() 
                    && enzymesTable.getValueAt(row, column) != null) {

                String tempValue = (String) enzymesTable.getValueAt(row, column);

                if (tempValue.lastIndexOf("<html>") != -1) {
                    this.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                } else {
                    this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                }

            } else {
                this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            }
        }
    }//GEN-LAST:event_enzymesTableMouseMoved

    /**
     * Enable/disable the delete button.
     * 
     * @param evt 
     */
    private void enzymesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enzymesTableMouseClicked
        deleteEnzymeButton.setEnabled(enzymesTable.getSelectedRow() != -1);
    }//GEN-LAST:event_enzymesTableMouseClicked

    /**
     * Change the cursor to the default cursor.
     *
     * @param evt
     */
    private void enzymesTableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enzymesTableMouseExited
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_enzymesTableMouseExited

    /**
     * Opens the link in a browser.
     *
     * @param evt
     */
    private void enzymesTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enzymesTableMouseReleased
        int row = enzymesTable.rowAtPoint(evt.getPoint());
        int column = enzymesTable.columnAtPoint(evt.getPoint());

        if (row != -1) {
            
            // open protein link in web browser
            if (column == enzymesTable.getColumn("PSI-MOD").getModelIndex()
                    && evt.getButton() == MouseEvent.BUTTON1
                        && enzymesTable.getValueAt(row, column) != null
                        && ((String) enzymesTable.getValueAt(row, column)).lastIndexOf("<html>") != -1) {

                    String link = (String) enzymesTable.getValueAt(row, column);
                    link = link.substring(link.indexOf("\"") + 1);
                    link = link.substring(0, link.indexOf("\""));

                    this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
                    BareBonesBrowserLaunch.openURL(link);
                    this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                
            }
        }
    }//GEN-LAST:event_enzymesTableMouseReleased

    /**
     * Change the cursor to a hand cursor.
     *
     * @param evt
     */
    private void exportEnzymesLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportEnzymesLabelMouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_exportEnzymesLabelMouseEntered

    /**
     * Change the cursor to the default cursor.
     *
     * @param evt
     */
    private void exportEnzymesLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportEnzymesLabelMouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_exportEnzymesLabelMouseExited

    /**
     * Export the enzymes to a file.
     * 
     * @param evt 
     */
    private void exportEnzymesLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportEnzymesLabelMouseReleased

        // get the file to send the output to
        final File selectedFile = FileChooserUtil.getUserSelectedFile(
                this, 
                ".json", 
                "Enzymes factory file (.json)", 
                "Export...", 
                "user.home", 
                "enymesFactory.json", 
                false
        );

        if (selectedFile != null) {

            try {
                EnzymeFactory.saveToFile(enzymeFactory, selectedFile);
                JOptionPane.showMessageDialog(
                        this, 
                        "Enzymes copied to file:\n" + selectedFile.getAbsolutePath(), 
                        "Enzymes Exported.", 
                        JOptionPane.INFORMATION_MESSAGE
                );
            } catch (IOException e) {
                JOptionPane.showMessageDialog(
                        null, 
                        "An error occurred when exporting the enzymes.", 
                        "Export Failed", 
                        JOptionPane.ERROR_MESSAGE
                );
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_exportEnzymesLabelMouseReleased

    /**
     * Delete the selected enzyme.
     * 
     * @param evt 
     */
    private void deleteEnzymeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEnzymeButtonActionPerformed
        int row = enzymesTable.getSelectedRow();
        String enzymeName = (String) enzymesTable.getValueAt(row, 1);
        enzymeFactory.removeEnzyme(enzymeName);
        updateEnzymesTable();
    }//GEN-LAST:event_deleteEnzymeButtonActionPerformed

    /**
     * Add a new enzyme.
     * 
     * @param evt 
     */
    private void addUserEnzymeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserEnzymeActionPerformed
        new NewEnzymeDialog(this);
    }//GEN-LAST:event_addUserEnzymeActionPerformed

    /**
     * Close the dialog and save the changes.
     * 
     * @param evt 
     */
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        formWindowClosing(null);
    }//GEN-LAST:event_okButtonActionPerformed

    /**
     * Change the cursor to a hand cursor.
     *
     * @param evt
     */
    private void enzymesHelpJButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enzymesHelpJButtonMouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_enzymesHelpJButtonMouseEntered

    /**
     * Change the cursor back to the default cursor.
     *
     * @param evt
     */
    private void enzymesHelpJButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enzymesHelpJButtonMouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_enzymesHelpJButtonMouseExited

    /**
     * Open the enzymes help.
     * 
     * @param evt 
     */
    private void enzymesHelpJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enzymesHelpJButtonActionPerformed
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        new HelpDialog(this, getClass().getResource("/helpFiles/EnzymesDialog.html"),
                Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icons/help.GIF")),
                Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icons/help.GIF")),
                "Enzymes - Help", 500, 10);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_enzymesHelpJButtonActionPerformed

    /**
     * Save the enzyme details.
     *
     * @param evt
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
        // save any changes to the factory
        try {
            enzymeFactory.saveFactory();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "An error occurred while saving the enzymes.",
                    "Saving Error", JOptionPane.WARNING_MESSAGE);
        }

        dispose();
    }//GEN-LAST:event_formWindowClosing

    /**
     * Change the cursor to a hand cursor.
     *
     * @param evt
     */
    private void resetEnzymesLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetEnzymesLabelMouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_resetEnzymesLabelMouseEntered

    /**
     * Change the cursor back to the default cursor.
     *
     * @param evt
     */
    private void resetEnzymesLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetEnzymesLabelMouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_resetEnzymesLabelMouseExited

    /**
     * Reset the enzymes to the default list.
     * 
     * @param evt 
     */
    private void resetEnzymesLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetEnzymesLabelMouseReleased
        EnzymeFactory.setDefaultEnzymes();
        enzymeFactory = EnzymeFactory.getInstance();
        updateEnzymesTable();
    }//GEN-LAST:event_resetEnzymesLabelMouseReleased

    /**
     * Change the cursor to a hand cursor.
     *
     * @param evt
     */
    private void importEnzymesLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importEnzymesLabelMouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_importEnzymesLabelMouseEntered

    /**
     * Change the cursor back to the default cursor.
     *
     * @param evt
     */
    private void importEnzymesLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importEnzymesLabelMouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_importEnzymesLabelMouseExited

    /**
     * Import enzymes from an enzymes factory file.
     * 
     * @param evt 
     */
    private void importEnzymesLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importEnzymesLabelMouseReleased
        
        // get the enzymes factory file
        final File selectedFile = FileChooserUtil.getUserSelectedFile(
                this, 
                ".json", 
                "Enzymes factory file (.json)", 
                "Import...", 
                "user.home", 
                "enymesFactory.json", 
                true
        );

        if (selectedFile != null) {

            try {
                enzymeFactory = EnzymeFactory.loadFromFile(selectedFile);
                updateEnzymesTable();
                JOptionPane.showMessageDialog(
                        this, 
                        "Enzymes loaded from file:\n" + selectedFile.getAbsolutePath(), 
                        "Enzymes Imported.", 
                        JOptionPane.INFORMATION_MESSAGE
                );
            } catch (IOException e) {
                JOptionPane.showMessageDialog(
                        null, 
                        "An error occurred when importing the enzymes.", 
                        "Import Failed", 
                        JOptionPane.ERROR_MESSAGE
                );
                e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_importEnzymesLabelMouseReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUserEnzyme;
    private javax.swing.JButton deleteEnzymeButton;
    private javax.swing.JPanel enzymesEditorPanel;
    private javax.swing.JButton enzymesHelpJButton;
    private javax.swing.JPanel enzymesPanel;
    private javax.swing.JScrollPane enzymesScrollPane;
    private javax.swing.JTable enzymesTable;
    private javax.swing.JLabel exportEnzymesLabel;
    private javax.swing.JLabel importEnzymesLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel resetEnzymesLabel;
    // End of variables declaration//GEN-END:variables

    /**
     * Table model for the default enzymes table.
     */
    private class DefaultEnzymesTable extends DefaultTableModel {

        @Override
        public int getRowCount() {
            return enzymeFactory.getEnzymes().size(); // @TODO: should only return the default enzymes!
        }

        @Override
        public int getColumnCount() {
            return 7;
        }

        @Override
        public String getColumnName(int column) {
            switch (column) {
                case 0:
                    return " ";
                case 1:
                    return "Name";
                case 2:
                    return "Cleaves After";
                case 3:
                    return "But Not Before";
                case 4:
                    return "Cleaves Before";
                case 5:
                    return "But Not After";
                case 6:
                    return "PSI-MOD";
                default:
                    return "";
            }
        }

        @Override
        public Object getValueAt(int row, int column) {
            Enzyme enzyme = enzymeFactory.getEnzyme(enzymeFactory.getSortedEnzymeNames().get(row));
            switch (column) {
                case 0:
                    return row + 1;
                case 1:
                    return enzyme.getName();
                case 2:
                    return getFormatAminoAcidList(enzyme.getAminoAcidBefore());
                case 3:
                    return getFormatAminoAcidList(enzyme.getRestrictionAfter());
                case 4:
                    return getFormatAminoAcidList(enzyme.getAminoAcidAfter());
                case 5:
                    return getFormatAminoAcidList(enzyme.getRestrictionBefore());
                case 6:
                    CvTerm cvTerm = enzyme.getCvTerm();
                    if (cvTerm != null) {
                        return getOlsAccessionLink(cvTerm.getAccession());
                    } else {
                        return null;
                    }
                default:
                    return "";
            }
        }

        @Override
        public Class getColumnClass(int columnIndex) {
            for (int i = 0; i < getRowCount(); i++) {
                if (getValueAt(i, columnIndex) != null) {
                    return getValueAt(i, columnIndex).getClass();
                }
            }
            return (Double.valueOf(0.0)).getClass();
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }
    }
    
    /**
     * Returns a web link to the given PSI-MS CV term at
     * https://www.ebi.ac.uk/ols/ontologies/ms.
     *
     * @param modAccession the PSI-MS accession number
     * @return the OLS web link
     */
    public String getOlsAccessionLink(String modAccession) {

        String modAccessionInLink = modAccession.replaceAll(":", "_");

        String accessionNumberWithLink = 
                "<html><a href=\"https://www.ebi.ac.uk/ols/ontologies/ms/terms?iri=http%3A%2F%2Fpurl.obolibrary.org%2Fobo%2F" 
                + modAccessionInLink + "\""
                + "\"><font color=\"" + selectedRowHtmlTagFontColor + "\">"
                + modAccession + "</font></a></html>";
        return accessionNumberWithLink;
    }
    
    /**
     * Returns the formatted string version of the amino acid list.
     * 
     * @param aminoAcidList the amino acid list
     * @return the formatted string version
     */
    private String getFormatAminoAcidList (HashSet<Character> aminoAcidList) {
        
         if (aminoAcidList == null || aminoAcidList.isEmpty()) {
             return null;
         } else {
             String temp = aminoAcidList.toString();
             return temp.substring(1, temp.length()-1);
         }
        
    }
    
    /**
     * Update the layout of the enzymes table.
     */
    public void updateEnzymesTable() {
        DefaultTableModel dm = (DefaultTableModel) enzymesTable.getModel();
        dm.fireTableDataChanged();
        ((TitledBorder) enzymesPanel.getBorder()).setTitle("Enzymes (" + enzymesTable.getRowCount() + ")");
        enzymesPanel.revalidate();
        enzymesPanel.repaint();
        deleteEnzymeButton.setEnabled(false);
    }
}
